package stx.run.pack.run.term;

class Eager implements RunApi{
  public function new(){}
  var fn    : Void->Tick;

  public function upply(schedule:Schedule):Void{
    __.log().close().trace("BASE::UPPLY");
    this.fn    = schedule.reply;
    close();
  }
  public function apply(schedule:Schedule):Bang{
    __.log().close().trace("BASE::APPLY");
    var ft      = __.future();
    close();
    ft.fst().trigger(Noise);
    return Bang._().fromFuture(ft.snd());
  }
  private function close(){
    __.log().close().trace("BASE::CLOSE");
    switch(fn()){
      case Exit               : 
      case Poll(milliseconds) :
        #if sys
          Sys.sleep(milliseconds/1000);
          close();
        #else
        #end
      case Busy               :
      case Fail(e)            :
        report(e);
    }
  }
  public function report(e:Err<Dynamic>):Void{
    throw(e);
  }
  public function asRunApi():RunApi{
    return this;
  }
}